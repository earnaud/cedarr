% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accessOntology.R
\name{accessOntology}
\alias{accessOntology}
\title{Access Ontologies}
\usage{
accessOntology(
  api.key,
  ontology = NA_character_,
  item = NA_character_,
  sub = NA_character_,
  output.mode = "content",
  page.index = 1,
  page.size = 50
)
}
\arguments{
\item{api.key}{character. An API Key is required to access any
API call. It is used within {cedarr} as a header for http
requests. An API key is linked to a CEDAR account
(https://cedar.metadatacenter.org/profile)}

\item{ontology}{character. Ontology name to display. In this context, ontology
can be set to NA: this will list all the ontologies registered in CEDAR.}

\item{item}{character. What ontology items shall be retrieved: none, its classes or its
properties? (resp. NA, "classes" or "properties")}

\item{sub}{character. At which level \code{item} shall be fetched: all or only root?
(resp. NA or "roots"). This parameter will only be evaluated if \code{item} is filled.}

\item{output.mode}{character. "full" will return the whole
response object (from {httr}) or "content" will fetch the
interest values from the response object. Getting the whole
object might be interesting to have a look at system metadata,
or in case of error to debug the connection. (defaults to
"content")}

\item{page.index}{integer. Index of the page to be returned (defaults to 1st page).}

\item{page.size}{integer. Number of results per page, capped at 50. (defaults to 50).}
}
\value{
\itemize{
\item{If no ontology ID is provided: returns a list of all ontologies registered in
CEDAR.}
\item{If an ontology ID is provided: returns an entry for this ontology.}
\item{If an ontology ID is provided with \code{item} = "classes": returns either
a list of the classes in this ontology, or at the root of this ontology if
provided with \code{sub} = "roots".}
\item{If an ontology ID is provided with \code{item} = "properties": returns either
a list of the properties in this ontology, or at the root of this ontology if
provided with \code{sub} = "roots".}
}

If \code{output.mode = "full"}, the whole http response object (see httr::response).
It is structured as a list with response metadata wrapping the \code{content} item
which contains the wanted result.

If \code{output.mode = "content"}, the \code{content} item is directly returned, containing
database metadata and the interesting information in the \code{collection} subitem.
}
\description{
Access ontologies by id and list their content.
}
\details{
This function matches the following queries from the Swagger UI
(https://terminology.metadatacenter.org/api/#/):

\itemize{
\item{\verb{/ontologies}}
\item{\verb{/ontologies/\{ontology\}}}
\item{\verb{/ontologies/\{ontology\}/classes}}
\item{\verb{/ontologies/\{ontology\}/classes/roots}}
\item{\verb{/ontologies/\{ontology\}/properties}}
\item{\verb{/ontologies/\{ontology\}/properties/roots}}
}

These differents requests are differenciated by the \code{item} and \code{sub}
arguments. The requests for \code{item = "properties"} are identical to some
available in \code{accessProperty()}.
}
\examples{
my.api.key <- readline()

# Find the root classes of ENVO
result <- cedarr::accessOntology(
  my.api.key,
  "ENVO",
  item = "classes",
  sub = "roots"
)

View(result)

}
