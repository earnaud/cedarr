devtools::load_all(".")
result2 <- cedarr::accessProperty(
my.api.key,
"ENVO",
id = "http://purl.obolibrary.org/obo/envo-p/patterns/process_attribute/attribute",
sub = "parents"
)
result2 <- cedarr::accessProperty(
my.api.key,
"ENVO",
id = "http://purl.obolibrary.org/obo/IAO_0000118",
sub = "parents"
)
devtools::load_all(".")
result2 <- cedarr::accessProperty(
my.api.key,
"ENVO",
id = "http://purl.obolibrary.org/obo/IAO_0000118",
sub = "parents"
)
result <- cedar.get(
api.key,
"https://terminology.metadatacenter.org/bioportal/provisional_relations",
output.mode = output.mode
)
result <- cedar.get(
api.key,
"https://terminology.metadatacenter.org/bioportal/provisional_relations",
output.mode = "full"
)
result <- cedar.get(
my;api.key,
"https://terminology.metadatacenter.org/bioportal/provisional_relations",
output.mode = "full"
)
result <- cedar.get(
my.api.key,
"https://terminology.metadatacenter.org/bioportal/provisional_relations",
output.mode = "full"
)
result <- cedar.get(
my.api.key,
"https://terminology.metadatacenter.org/bioportal/relations",
output.mode = "full"
)
result <- cedar.get(
my.api.key,
"https://terminology.metadatacenter.org/bioportal/vs-collections/CEDARVS/values",
output.mode = "full"
)
result <- cedar.get(
my.api.key,
"https://terminology.metadatacenter.org/bioportal/vs-collections/CEDARVS/",
output.mode = "full"
)
result <- cedar.get(
my.api.key,
"https://terminology.metadatacenter.org/bioportal/vs-collections/CEDARVS/values",
output.mode = "full"
)
result <- cedar.get(
my.api.key,
"https://terminology.metadatacenter.org/bioportal/vs-collections/",
output.mode = "full"
)
result <- cedar.get(
my.api.key,
"https://terminology.metadatacenter.org/bioportal/vs-collections/CEDARVS/value-sets",
output.mode = "full"
)
rm(result1)
rm(result2)
result$content$collection$
`@id`
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?accessValueSets
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
result
result <- cedar.get(
my.api.key,
paste0(
"https://terminology.metadatacenter.org/bioportal/vs-collections/CEDARVS/value-sets/",
URLencode("http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type",reserved = TRUE)
)
)
result
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
result
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
devtools::load_all(".")
devtools::load_all(".")
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
id
result
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
ls()
sapply(ls(), get)
sapply(ls(), get, environment)
sapply(ls(), get, env= environment)
sapply(ls(), get, envir= environment)
sapply(ls(), get, envir= environment())
sub == "values"
identical(sub, "values")
isTRUE(!is.null(id) && sub == "values")
source('~/Softwares/Gits/cedarr/R/accessValueSets.R')
devtools::load_all(".")
source('~/Softwares/Gits/cedarr/R/accessValueSets.R')
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
devtools::load_all(".")
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
result
ls()
url
api.key
output.mode
...
GET(
url,
add_headers(Authorization = paste("apiKey", api.key))
)
GET(
url,
...,
add_headers(Authorization = paste("apiKey", api.key))
)
result <- GET(
url,
...,
add_headers(Authorization = paste("apiKey", api.key))
)
result
result$status_code
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
result
url
match.call
match.call()
ls()
sapply(ls(), get)
sapply(ls(), get, envir = environment())
?GET
devtools::load_all(".")
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
is.null(id) || isTRUE(!is.null(id) && sub == "values")
cedar.get(
api.key,
paste0(
"https://terminology.metadatacenter.org/bioportal/vs-collections/",
vs.collection,
"/value-sets",
id
),
output.mode = output.mode
)
cedar.get(
api.key,
paste0(
"https://terminology.metadatacenter.org/bioportal/vs-collections/",
vs.collection,
"/value-sets",
id
),
output.mode = output.mode
)
result
GET(
url,
...,
add_headers(Authorization = paste("apiKey", api.key))
)
isFALSE(is.character(output.mode) && output.mode %in% c("full","content"))
devtools::load_all(".")
devtools::load_all(".")
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
devtools::load_all(".")
?listValueSets
result <- cedarr::listValueSets(
my.api.key,
)
result
names(result)
unique(resu)
unique(result$@id)
unique(result$`@id`)
names(result)
devtools::load_all(".")
?cedarr:search
?cedarr:search
?cedarr::search
result <- cedarr::query(
my.api.key,
"habitat",
"ENVO"
)
result <- cedarr::search(
my.api.key,
"habitat",
"ENVO"
)
page
devtools::load_all(".")
result <- cedarr::search(
my.api.key,
"habitat",
"ENVO"
)
?page
?accessClasses
?accessClass
result <- cedarr::accessClass(
my.api.key,
"ENVO",
"http://purl.obolibrary.org/obo/ENVO_01000739", sub = "tree"
)
devtools::load_all(".")
result <- cedarr::accessClass(
my.api.key,
"ENVO",
"http://purl.obolibrary.org/obo/ENVO_01000739", sub = "tree"
)
View(result)
result <- cedarr::accessClass(
my.api.key,
"ENVO",
"http://purl.obolibrary.org/obo/ENVO_01000739", sub = "descendants"
)
View(result)
result <- cedarr::accessClass(
my.api.key,
"ENVO",
"http://purl.obolibrary.org/obo/ENVO_01000739", sub = "children"
)
View(result)
result <- cedarr::accessClass(
my.api.key,
"ENVO",
"http://purl.obolibrary.org/obo/ENVO_01000817"
)
View(result)
result <- cedarr::accessClass(
my.api.key,
"ENVO",
"http://purl.obolibrary.org/obo/ENVO_01000817",
sub = "tree"
)
View(result)
result <- cedarr::accessClass(
my.api.key,
"ENVO",
"http://purl.obolibrary.org/obo/ENVO_01000817",
sub = "children"
)
View(result)
# Fetch 'biome' class in ENVO
result <- cedarr::accessClass(
my.api.key,
"ENVO",
"http://purl.obolibrary.org/obo/ENVO_00000428"
)
View(result)
# Fetch 'biome' class in ENVO
result <- cedarr::accessClass(
my.api.key,
"ENVO",
"http://purl.obolibrary.org/obo/ENVO_00000428",
sub = "tree"
)
View(result)
# Fetch 'biome' class in ENVO
result <- cedarr::accessClass(
my.api.key,
"ENVO",
"http://purl.obolibrary.org/obo/ENVO_00000428",
sub = "children"
)
View(result)
# Fetch 'biome' class in ENVO
result <- cedarr::accessClass(
my.api.key,
"ENVO",
"http://purl.obolibrary.org/obo/ENVO_00000428",
sub = "descendants"
)
View(result)
result[["collection"]][["hasChildren"]]
?accessProvisional()
result <- cedarr::accessProvisional(
my.api.key,
"ENVO"
)
result <- cedarr::accessProvisional(
my.api.key,
"ENVO"
)
result <- cedarr::accessProvisional(
my.api.key,
"ENVO"
)
devtools::load_all(".")
devtools::load_all(".")
result <- cedarr::accessProvisional(
my.api.key,
"ENVO"
)
devtools::load_all(".")
result <- cedarr::accessProvisional(
my.api.key,
"ENVO"
)
devtools::load_all(".")
result <- cedarr::accessProvisional(
my.api.key,
"ENVO"
)
View(result)
result <- cedarr::accessProvisional(
my.api.key,
"ENVO"
)
View(result)
?cedarr::search
?`API response`
?api-response
?`api-response`
result
names(result)
names(result$collection)
result <- cedarr::search(
my.api.key,
"habitat",
"ENVO"
)
names(result$collection)
?accessOntology
?cedarr::accessOntology
devtools::load_all(".")
?cedarr::accessOntology
warnings()
result <- cedarr::accessOntology(
my.api.key,
"ENVO",
item = "classes",
sub = "roots"
)
View(result)
my.api.key
my.api.key <- "8fe5be450c83f1db53a91fe97b64cb87bff3e46aa382e658a3c85fe32cf3c5bc"
result <- cedarr::accessOntology(
my.api.key,
"ENVO",
item = "classes",
sub = "roots"
)
View(result)
result <- cedarr::accessOntology(
my.api.key,
"ENVO",
item = "classes",
sub = "roots"
)
View(result)
devtools::load_all(".")
result <- cedarr::accessOntology(
my.api.key,
"ENVO",
item = "classes",
sub = "roots"
)
View(result)
devtools::load_all(".")
result <- cedarr::accessOntology(
my.api.key,
"ENVO",
item = "classes",
sub = "roots"
)
View(result)
result <- cedarr::accessOntology(
my.api.key,
"ENVO"
)
View(result)
?accessValueSets
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
?listValueSets
result <- cedarr::listValueSets(
my.api.key
)
View(result)
?listValueSets
?accessProperty
result2 <- cedarr::accessProperty(
my.api.key,
"ENVO",
id = "http://purl.obolibrary.org/obo/IAO_0000118",
sub = "parents"
)
result1 <- cedarr::accessProperty(
my.api.key,
"ENVO",
id = "roots",
sub = "smurf" # ignored
)
devtools::load_all(".")
source('~/Softwares/Gits/cedarr/R/utils.R')
devtools::load_all(".")
devtools::install_github("earnaud/cedarr")
devtools::load_all(".")
devtools::load_all(".")
devtools::check_failures()
devtools::check_failures(".")
devtools::package_info(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::install_github("earnaud/cedarr")
devtools::install_github("earnaud/cedarr")
devtools::load_all(".")
devtools::install_github("earnaud/cedarr")
?`api-response`
?`api-response`
devtools::load_all(".")
devtools::install_github("earnaud/cedarr")
devtools::install_github("earnaud/cedarr")
devtools::load_all(".")
devtools::build()
devtools::install_local("../cedarr_0.0.0.9000.tar.gz")
devtools::unload("cedarr")
devtools::build()
devtools::install_local("../cedarr_0.0.0.9000.tar.gz")
remove.packages("cedarr")
devtools::install_local("../cedarr_0.0.0.9000.tar.gz")
remove.packages("cedarr")
devtools::loaded_packages()
devtools::build()
devtools::install_local("../cedarr_0.0.0.9000.tar.gz")
cedarr::
library(cedarr)
remove.packages("cedarr")
devtools::install_github("earnaud/cedarr")
devtools::package_info("cedarr")
devtools::dev_sitrep()
devtools::load_all(".")
remove.packages("cedarr")
devtools::install_github("earnaud/cedarr")
?cedarr::search
mytest <- function(a, b = NA){
message(a)
message(b)
}
mytest("a")
mytest <- function(a, b = NA_character_){
message(a)
message(is.character(b) || is.na(b))
}
mytest("a")
?accessProperty
usethis::use_mit_license()
usethis::use_mit_license(name = "Whetzel PL; Noy NF; Shah NH; Alexander PR; Nyulas C; Tudorache T; Musen MA; Arnaud E; PNDB")
usethis::use_mit_license(name = "Whetzel PL; Noy NF; Shah NH; Alexander PR; Nyulas C; Tudorache T; Musen MA; Arnaud E")
usethis::use_mit_license(name = "Whetzel PL (BioPortal); Noy NF (BioPortal); Shah NH (BioPortal); Alexander PR (BioPortal); Nyulas C (BioPortal); Tudorache T (BioPortal); Musen MA (BioPortal); Arnaud E (PNDB)")
