ls()
content
content.result$content
content.result$content %>% rawToChar()
devtools::load_all(".")
res <- cedar.search(
cedar.client = cc,
vs_collection = "CEDARVS"
)
devtools::load_all(".")
res <- cedar.search(
cedar.client = cc,
vs_collection = "CEDARVS"
)
devtools::load_all(".")
res <- cedar.search(
cedar.client = cc,
vs_collection = "CEDARVS"
)
.vsc.list
.vsc.list %>% rawToChar()
.vsc.list %>% rawToChar() %>% fromJSON()
devtools::load_all(".")
res <- cedar.search(
cedar.client = cc,
vs_collection = "CEDARVS"
)
.vsc.list
res <- cedar.search(
cedar.client = cc,
vs_collection = "CEDARVS"
)
devtools::load_all(".")
res <- cedar.search(
cedar.client = cc,
vs_collection = "CEDARVS"
)
devtools::load_all(".")
res <- cedar.search(
cedar.client = cc,
vs_collection = "CEDARVS"
)
res <- cedar.search(
cedar.client = cc,
vs_collection = "CEDARVS"
)
devtools::load_all(".")
res <- cedar.search(
cedar.client = cc,
vs_collection = "CEDARVS"
)
vs_id
?cedar.search
res <- cedar.search(
cedar.client = cc,
vs_collection = "CEDARVS",
vs_id = "803d8340-6a1e-0138-64d8-005056010073"
)
View(res)
res <- cedar.search(
cedar.client = cc,
vs_collection = "CEDARVS"
)
devtools::load_all(".")
View(res)
View(res[["collection"]])
res <- cedar.search(
cedar.client = cc,
vs_collection = "CEDARVS",
vs_id = "803d8340-6a1e-0138-64d8-005056010073"
)
49*pi
49*pi/8
49*pi/8 > 36*pi/6
49*pi/8; 36*pi/6
49*pi/8/1.70; 36*pi/6/1.50
49*pi/8/1.70 > 36*pi/6/1.50
formals(cedar.search)
CEDAR <- list()
is.character(NA_character_)
#' A concept in the domain of the ontology. Used within BioPortal, class is a synonym for
#'  term or concept. Term is the preferred BioPortal label.
#'
#' @slot apikey  An API Key is required to access any API call. It is used within BORAA
#' methods as #' a header for http requests. An API key is linked to a CEDAR account (\url{cedar.metadatacenter.org}).
#'
#' @export
setClass(
Class = "cedar.class",
slots = c(
id = "character",
tree = "ANY",
children = "ANY",
descendants = "ANY",
parents = "ANY"
),
prototype = prototype(
id = NA_character_
),
validity = function(object){
errors <- character()
if(!is(object@id, "character") ||
object@id == "" ||
length(object@id) == 0)
errors <- c(errors, "`id` slot shall be filled with the id for this class.")
#TODO add a cedar.search to check for class validity
if(length(errors) == 0) TRUE else errors
}
)
`named list()`
list("a") %>% attr(., "names") <- "e"
list("a") %>% (attr(., "names") <- "e")
?setAs
class("NA")
class(NA)
devtools::load_all(".")
devtools::load_all(".")
?cedar.search.values
?signature
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?cedar.search.ontologies
devtools::load_all(".")
?cedar.search
?cedar.search.values
?cedar.search.ontologies
devtools::load_all(".")
?cedar.search.ontologies
devtools::load_all(".")
?cedar.search.ontologies
cc
my.api.key <- "8fe5be450c83f1db53a91fe97b64cb87bff3e46aa382e658a3c85fe32cf3c5bc"
cc <- cedar.client(api.key = my.api.key)
?cedar.search
?cedar.search.ontologies
# ----------------------------------
## 2 - fetch ontologies
res <- cedar.search.ontologies(
cedar.client = cc
)
res$details
View(res$details)
devtools::load_all(".")
devtools::load_all(".")
is("1", "ANY")
?is
class("ANY")
devtools::load_all(".")
devtools::load_all(".")
?cedar.search.ontologies
?cedar.search.ontologies
cc
res <- cedar.search.ontologies(
cedar.client = cc,
source = "ENVO"
)
View(res)
devtools::load_all(".")
?cedar.search.ontologies
?cedar.search.values
?cedar.search.ontologies
devtools::load_all(".")
?cedar.search.values
my.api.key <- "8fe5be450c83f1db53a91fe97b64cb87bff3e46aa382e658a3c85fe32cf3c5bc"
cc <- cedar.client(api.key = my.api.key)
cedar.search.values(cc, source = "CEDARVS")
source('~/Softwares/Gits/cedarr/R/cedar.search.values.R')
devtools::load_all(".")
devtools::load_all(".")
cedar.search.values(cc, source = "CEDARVS")
devtools::load_all(".")
cedar.search.values(cc, source = "CEDARVS")
devtools::load_all(".")
cedar.search.values(cc, source = "CEDARVS")
getMethods(cedar.search.values)
getMethods("cedar.search.values")
?getMethods
showMethods("cedar.search.values")
showMethods("cedar.search.values", showEmpty = TRUE)
showMethods("cedar.search.values")
.S4methods("cedar.search.values")
.S4methods("cedar.search.values")
showMethods("cedar.search.values")
cedar.search.values(cc)
devtools::load_all(".")
showMethods("cedar.search.ontologies")
showMethods("cedar.search.values")
?signature
signature(test = c("numeric", "character"))
?dplyr::select
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
traceback()
devtools::load_all(".")
devtools::load_all(".")
showMethods("cedar.search.values")
help("cedar.search.values")
devtools::load_all(".")
my
1:3 == 2
4:6[1:3 == 2]
(4:6)[1:3 == 2]
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
readline()
devtools::load_all(".")
devtools::load_all(".")
switch(NA,
NA = 1)
switch(NA,
`NA` = 1)
switch(NA,
`NA` = 1,
2)
switch(
NA,
`NA` = 1,
2)
a = NA
switch (a,
NA = 1
)
switch (a,
`NA` = 1
)
switch (a,
`NA` = 1,
2
)
switch (a,
`NA` = print(1),
print(2)
)
a
switch (a,
`NA` = print(1),
print(2)
)
?switch
rm(a)
identical(NA, NA_character_)
?assign
ls()
my.api.key <- "8fe5be450c83f1db53a91fe97b64cb87bff3e46aa382e658a3c85fe32cf3c5bc"
get("my.api.key")
==
`==`
.Primitive("==")
?.Primitive("==")
(function(x = c(1,2)) print(get("x")))()
?search
?query
?cedarr::query
devtools::load_all(".")
?query
paste0("/", "rer", NULL, collapse = "/")
paste0("/", "rer", "NULL", collapse = "/")
paste0("", "rer", NULL, sep = "/")
paste0(c("/", "rer", "NULL"), collapse = "/")
paste0(c("/", "rer", NULL), collapse = "/")
paste0(c("", "rer", NULL), collapse = "/")
as.integer(0.1)
try(as.integer(0.1))
devtools::load_all(".")
devtools::load_all(".")
cedarr::search(my.api.key, "habitat")
TRUE || FALSE
devtools::load_all(".")
cedarr::search(my.api.key, "habitat")
subtree.root.id
(!is.character(subtree.root.id) && !is.na(subtree.root.id)) ||
!grepl("^http", subtree.root.id)
is.character(subtree.root.id)
is.na(subtree.root.id)
(!is.character(subtree.root.id) && !is.na(subtree.root.id))
devtools::load_all(".")
cedarr::search(my.api.key, "habitat")
devtools::load_all(".")
cedarr::search(my.api.key, "habitat")
devtools::load_all(".")
cedarr::search(my.api.key, "habitat")
test <- cedarr::search(my.api.key, "habitat")
View(test)
typeof(test)
usethis::use_test()
?testthat::expect
vignette("custom-expectation")
cedarr::search(my.api.key, "habitat")
test <- cedarr::search(my.api.key, "habitat", output.mode = "full")
test$status_code
get("my.api.key", envir = .GlobalEnv)
quote("ENVO")
quote(ENVO)
deparse("ENVO")
testthat::auto_test()
testthat::auto_test("./R")
testthat::auto_test("./R", "./tests/")
cedarr::search(
my.api.key,
"habitat",
output.mode = "full"
)$status_code
a<-c(2,4,3,4,6,5,3,1,2,3,4,3,4,5,65)
b<-c(23,45,32,12,23,43,56,44,33,11,12,54,23,34,54)
d<-c(9,4,5,3,2,1,3,4,5,6,4,9,10,11,18)
my.experiment <- function( ) {
OLS <- lm( a ~ b+d )
MSE_OLS<-mean(OLS$residuals^2)
return( c(MSE_OLS) )
}
my.data = t(replicate( 500, my.experiment() ))
colnames(my.data) <- c("MSE_OLS")
mean(my.data)
a<-c(2,4,3,4,6,5,3,1,2,3,4,3,4,5,65)
b<-c(23,45,32,12,23,43,56,44,33,11,12,54,23,34,54)
d<-c(9,4,5,3,2,1,3,4,5,6,4,9,10,11,18)
my.experiment <- function(a=a,b=b,d=d) {
OLS <- lm( a ~ b+d )
MSE_OLS<-mean(OLS$residuals^2)
return( c(MSE_OLS) )
}
my.data = t(replicate( 500, my.experiment() ))
colnames(my.data) <- c("MSE_OLS")
mean(my.data)
a<-c(2,4,3,4,6,5,3,1,2,3,4,3,4,5,65)
b<-c(23,45,32,12,23,43,56,44,33,11,12,54,23,34,54)
d<-c(9,4,5,3,2,1,3,4,5,6,4,9,10,11,18)
my.experiment <- function(a=a,b=b,d=d) {
OLS <- lm( a ~ b+d )
MSE_OLS<-mean(OLS$residuals^2)
return( MSE_OLS )
}
my.data = t(replicate( 500, my.experiment() ))
colnames(my.data) <- c("MSE_OLS")
mean(my.data)
a<-c(2,4,3,4,6,5,3,1,2,3,4,3,4,5,65)
b<-c(23,45,32,12,23,43,56,44,33,11,12,54,23,34,54)
d<-c(9,4,5,3,2,1,3,4,5,6,4,9,10,11,18)
my.experiment <- function(a=a,b=b,d=d) {
OLS <- lm( a ~ b+d )
MSE_OLS<-mean((OLS$residuals)^2)
return( MSE_OLS )
}
my.data = t(replicate( 500, my.experiment() ))
colnames(my.data) <- c("MSE_OLS")
mean(my.data)
a<-c(2,4,3,4,6,5,3,1,2,3,4,3,4,5,65)
b<-c(23,45,32,12,23,43,56,44,33,11,12,54,23,34,54)
d<-c(9,4,5,3,2,1,3,4,5,6,4,9,10,11,18)
my.experiment <- function(a=a,b=b,d=d) {
OLS <- lm( a ~ b+d )
MSE_OLS<-mean(OLS$residuals^2)
return( MSE_OLS )
}
my.data = t(replicate( 500, my.experiment() ))
colnames(my.data) <- c("MSE_OLS")
mean(my.data)
ls()
my.data
lm(a~b+d)
lm(formula = as.formula("a~b+d"))
a<-c(2,4,3,4,6,5,3,1,2,3,4,3,4,5,65)
b<-c(23,45,32,12,23,43,56,44,33,11,12,54,23,34,54)
d<-c(9,4,5,3,2,1,3,4,5,6,4,9,10,11,18)
my.experiment <- function(a=a,b=b,d=d) {
OLS <- lm( a ~ b+d )
MSE_OLS<-mean(OLS$residuals^2)
return( MSE_OLS )
}
my.data = t(replicate( 500, my.experiment(a,b,d) ))
colnames(my.data) <- c("MSE_OLS")
mean(my.data)
getwd
getwd()
devtools::load_all(".")
devtools::load_all(".")
api.key <- "8fe5be450c83f1db53a91fe97b64cb87bff3e46aa382e658a3c85fe32cf3c5bc"
devtools::load_all(".")
?cedar.get
class(newArgCheck())
?readline
api.key
cedarr::accessRelation(
api.key,
id =  "http://purl.obolibrary.org/obo/ZP_0002924"
)
accessValues(api.key, "CEDARVS")
cedar.get(api.key, "https://terminology.metadatacenter.org/bioportal/vs-collections/CEDARVS/values")
cedar.get(api.key, "https://terminology.metadatacenter.org/bioportal/vs-collections/CEDARVS/")
cedar.get(api.key, "https://terminology.metadatacenter.org/bioportal/vs-collections/CEDARVS")
?cedarr::accessValueSets()
result <- cedarr::listVSCollections(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
View(result)
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
View(result)
my.api.key <- api.key
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
View(result)
devtools::load_all(".")
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type"
)
View(result)
result
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type",
output.mode = "full"
)
View(result)
cedar.get(api.key, "https://terminology.metadatacenter.org/bioportal/vs-collections/CEDARVS/value-sets/http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type")
res <- cedar.get(api.key, "https://terminology.metadatacenter.org/bioportal/vs-collections/CEDARVS/value-sets/http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type")
res
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
output.mode = "full"
)
View(result)
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type",
output.mode = "full"
)
View(result)
devtools::load_all(".")
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type",
output.mode = "full"
)
View(result)
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type", sub = "values",
output.mode = "full"
)
View(result)
devtools::load_all(".")
devtools::load_all(".")
result <- cedarr::accessValueSets(
my.api.key,
vs.collection = "CEDARVS",
id = "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets#Study_File_Type", sub = "values",
output.mode = "full"
)
View(result)
result[[1]]
res <- cedar.get(api.key, "https://terminology.metadatacenter.org/bioportal/vs-collections/CEDARVS/value-sets/http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets?page=1&page_size=50#Study_File_Type/values")
res <- cedar.get(api.key, "https://terminology.metadatacenter.org/bioportal/vs-collections/CEDARVS/value-sets/http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets?page=1&page_size=50#Study_File_Type/values", output.mode = "full")
res <- cedar.get(api.key, "https://terminology.metadatacenter.org/bioportal/vs-collections/CEDARVS/value-sets/http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets?page=1&page_size=50#Study_File_Type/values", output.mode = "content")
res$status_code
res$content
res$content$errorKey
res$content$parameters
res$url
utf8::as_utf8(res$url)
utf8::utf8_encode(res$url)
utf8::utf8_format(res$url)
utf8::utf8_normalize(res$url)
utf8::utf8_print(res$url)
utf8::as_utf8(res$url)
utf8::output_ansi(res$url)
utf8::utf8_encode(res$url)
encodeString(res$url)
enc2utf8(res$url)
enc2native(res$url)
?iconv
iconvlist()
tail(iconvlist(),100)
tail(iconvlist(),500)
iconv(res$url, to="UTF-8")
iconv(res$url, from="UTF-8")
test <- "http://www.semanticweb.org/jgraybeal/ontologies/2015/7/cedarvaluesets?page=1&page_size=50#Study_File_Type/values"
iconv(test, from="UTF-8")
iconv(test, to="UTF-8")
iconv(test, to="ISO-8859-15")
iconvlist
iconvlist()
iconv(test, to="ISO8859-15")
iconv(test, from="ISO8859-15")
iconv(test, from="UTF-8", to="ISO8859-15")
iconv(test, from="UTF-8", to="ISO8859-1")
iconv(test, to="UTF-8", from="ISO8859-1")
iconv(test, to="UTF-8", from="ISO8859-15")
URLencode(test)
URLdecode(test)
URLencode(test, FALSE)
URLencode(test, reserved = FALSE)
URLencode(test, reserved = TRUE)
